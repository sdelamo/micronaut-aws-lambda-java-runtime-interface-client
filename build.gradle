plugins {
    id("com.github.johnrengelman.shadow") version "6.1.0"
    id("io.micronaut.application") version "1.4.4"
}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}

micronaut {
    runtime("lambda")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
}

dependencies {
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    compileOnly("org.graalvm.nativeimage:svm")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut.aws:micronaut-function-aws")
    implementation('com.amazonaws:aws-lambda-java-runtime-interface-client:1.0.0')
    runtimeOnly("ch.qos.logback:logback-classic")
    testImplementation("io.micronaut:micronaut-http-client")
}

application {
    mainClass.set("com.amazonaws.services.lambda.runtime.api.client.AWSLambda")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

dockerfileNative {
    args = ['com.example.BookRequestHandler']
}

//task addInitializeAtBuildTime {
//    dependsOn 'dockerfileNative'
//    doLast {
//        File f = new File('build/docker/DockerfileNative')
//        String text = f.text
//        text = text.replace('Name=application', 'Name=application --initialize-at-build-time=jdk.xml.internal.SecuritySupport --allow-incomplete-classpath')
//        f.text = text
//    }
//}
//dockerBuildNative.dependsOn('addInitializeAtBuildTime')


